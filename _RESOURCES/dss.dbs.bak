<?xml version="1.0" encoding="UTF-8" ?>
<project name="haley-dss" database="MariaDb" id="93003ef9-df78-41a8-abf9-c1beee74eaca" >
	<schema name="dss_client" >
		<table name="directory" prior="direc" >
			<column name="module" type="BIGINT" mandatory="y" />
			<column name="id" type="BIGINT" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="parent" type="BIGINT" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[For a root this is nullable (we just fill with zero to denote that this is root directory). Don't reference with a foreign key.]]></comment>
			</column>
			<column name="stored_name" type="VARCHAR" length="300" mandatory="y" />
			<column name="created" prior="created_at" type="TIMESTAMP" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="updated" prior="updated_at" type="TIMESTAMP" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<index name="pk_directory_0" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="unq_directory" unique="UNIQUE_KEY" >
				<column name="module" />
				<column name="parent" />
				<column name="stored_name" />
			</index>
			<fk name="fk_directory_module" to_schema="dss_client" to_table="module" >
				<fk_column name="module" pk="id" />
			</fk>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
		<table name="directory_info" prior="directory_in" >
			<column name="id" type="BIGINT" mandatory="y" />
			<column name="name" type="VARCHAR" length="240" mandatory="y" />
			<column name="display_name" type="VARCHAR" length="240" mandatory="y" />
			<column name="path" type="TEXT" >
				<comment><![CDATA[cached full path for performance]]></comment>
			</column>
			<column name="valid" prior="is_valid" type="BIT" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Is Path valid]]></comment>
			</column>
			<index name="pk_directory_info" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_directory_info_directory" to_schema="dss_client" to_table="directory" >
				<fk_column name="id" pk="id" />
			</fk>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
		<table name="doc_info" prior="doc_name" >
			<column name="extension" type="INT" />
			<column name="file" type="BIGINT" mandatory="y" />
			<column name="name" prior="original_name" type="VARCHAR" length="400" mandatory="y" />
			<column name="display_name" prior="original_name" type="VARCHAR" length="240" mandatory="y" />
			<column name="path" type="TEXT" >
				<comment><![CDATA[cached for performance]]></comment>
			</column>
			<column name="valid" type="INT" />
			<index name="pk_file_info_0" unique="PRIMARY_KEY" >
				<column name="file" />
			</index>
			<index name="idx_doc_info_name" unique="NORMAL" >
				<column name="name" />
			</index>
			<index name="idx_doc_info" unique="NORMAL" >
				<column name="extension" />
				<column name="name" />
			</index>
			<fk name="fk_file_info_file_index_0" to_schema="dss_client" to_table="document" >
				<fk_column name="file" pk="id" />
			</fk>
			<fk name="fk_doc_info_extension" to_schema="dss_client" to_table="extension" >
				<fk_column name="extension" pk="id" />
			</fk>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
		<table name="doc_version" prior="file_version" >
			<column name="id" type="BIGINT" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="doc" prior="file" type="BIGINT" mandatory="y" />
			<column name="created" prior="created_at" type="TIMESTAMP" mandatory="y" >
				<defo><![CDATA[current_timestamp()]]></defo>
			</column>
			<column name="size" type="BIGINT" mandatory="y" >
				<comment><![CDATA[in bytes]]></comment>
			</column>
			<column name="version" type="INT" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<index name="pk_file_version" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_file_version" unique="NORMAL" >
				<column name="doc" />
				<column name="version" />
			</index>
			<index name="idx_file_version_0" unique="NORMAL" >
				<column name="created" />
			</index>
			<fk name="fk_file_version_file_index" to_schema="dss_client" to_table="document" >
				<fk_column name="doc" pk="id" />
			</fk>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
		<table name="document" prior="file_index" >
			<column name="parent" type="BIGINT" mandatory="y" />
			<column name="id" type="BIGINT" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="guid" type="VARCHAR" length="48" mandatory="y" >
				<defo><![CDATA['uuid()']]></defo>
				<comment><![CDATA[Its unique GUID, not generated from the hash]]></comment>
			</column>
			<column name="created" prior="created_at" type="TIMESTAMP" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="modified" prior="modified_on" type="TIMESTAMP" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="stored_name" type="VARCHAR" length="240" mandatory="y" />
			<index name="pk_fileindex" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="unq_file_index" unique="UNIQUE_KEY" >
				<column name="guid" />
			</index>
			<index name="fk_file_index_parent" unique="NORMAL" >
				<column name="parent" />
			</index>
			<index name="unq_document" unique="UNIQUE_KEY" >
				<column name="parent" />
				<column name="stored_name" />
			</index>
			<fk name="fk_document_directory" to_schema="dss_client" to_table="directory" >
				<fk_column name="parent" pk="id" />
			</fk>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
		<table name="extension" prior="extensions" >
			<column name="id" type="INT" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="name" type="VARCHAR" length="100" mandatory="y" />
			<index name="pk_file_extensions" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
		<table name="module" prior="directory" >
			<column name="id" type="BIGINT" length="20" mandatory="y" />
			<index name="pk_directory" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
	</schema>
	<schema name="dss_core" >
		<table name="client" spec="" >
			<column name="id" type="INT" length="11" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="name" type="VARCHAR" length="100" mandatory="y" />
			<column name="display_name" type="VARCHAR" length="100" mandatory="y" />
			<column name="hash_guid" prior="guid" type="VARCHAR" length="48" mandatory="y" >
				<defo><![CDATA[uuid()]]></defo>
				<comment><![CDATA[Guid should be based on the hash of the name because it should be recreatable at the application level.

The hash should be recreatable from the application also. So, take the client name and then do sha256 to generate the hash. Idea is when the DB is down, still the folder should be reachable.

Each client should be aware that if their base name is managed or not. So, that one client A might say that its' base directory is not managed, and client B might say that its base directory is managed.]]></comment>
			</column>
			<column name="path" type="VARCHAR" length="140" mandatory="y" >
				<comment><![CDATA[Created only at register time.
We would have anyhow created the guid based on the provided name. If the client is created as managed, then the path should be based on the guid. or else it should be based on the name itself.]]></comment>
			</column>
			<column name="created" prior="created_on" type="TIMESTAMP" mandatory="y" >
				<defo><![CDATA[current_timestamp()]]></defo>
			</column>
			<column name="modified" type="TIMESTAMP" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<index name="pk_client" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="unq_client" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
			<index name="unq_client_1" unique="UNIQUE_KEY" >
				<column name="hash_guid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci]]></options>
		</table>
		<table name="client_keys" prior="client_key" >
			<column name="client" type="INT" mandatory="y" />
			<column name="signing" type="VARCHAR" length="300" mandatory="y" />
			<column name="encrypt" type="VARCHAR" length="300" mandatory="y" />
			<column name="password" type="VARCHAR" length="120" mandatory="y" />
			<index name="pk_client_keys" unique="PRIMARY_KEY" >
				<column name="client" />
			</index>
			<fk name="fk_client_keys_client" to_schema="dss_core" to_table="client" >
				<fk_column name="client" pk="id" />
			</fk>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
		<table name="module" prior="directory" >
			<column name="parent" prior="parent_id" type="INT" mandatory="y" />
			<column name="id" type="BIGINT" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="name" type="VARCHAR" length="120" mandatory="y" />
			<column name="display_name" type="VARCHAR" length="120" mandatory="y" />
			<column name="hash_guid" prior="guid" type="VARCHAR" length="48" mandatory="y" >
				<comment><![CDATA[same like the client. Guid is created based on the hash of the entered name]]></comment>
			</column>
			<column name="path" type="VARCHAR" length="200" >
				<comment><![CDATA[Path is not mandatory. Sometimes if it is not present, we just assume that the data is present in the base directory level. As file ids are created at client level (and not at directory level), not having a path will not create any conflicts. Only file ids will not create issues. However, storing the file itself might create conflicts. So need to be careful with that approach.]]></comment>
			</column>
			<column name="created" prior="created_on" type="DATETIME" mandatory="y" >
				<defo><![CDATA[current_timestamp()]]></defo>
			</column>
			<column name="notes" type="VARCHAR" length="600" />
			<column name="active" prior="is_active" type="BIT" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="type" type="INT" mandatory="y" />
			<index name="pk_direcory" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="unq_directory_01" unique="UNIQUE_KEY" >
				<column name="parent" />
				<column name="name" />
			</index>
			<index name="idx_directory_1" unique="NORMAL" >
				<column name="type" />
			</index>
			<index name="unq_directory_1" unique="UNIQUE_KEY" >
				<column name="parent" />
				<column name="hash_guid" />
			</index>
			<index name="idx_directory_2" unique="NORMAL" >
				<column name="parent" />
				<column name="type" />
				<column name="name" />
			</index>
			<fk name="fk_direcory_client" to_schema="dss_core" to_table="client" >
				<fk_column name="parent" pk="id" />
			</fk>
			<fk name="fk_directory_tag" to_schema="dss_core" to_table="tag" >
				<fk_column name="type" pk="id" />
			</fk>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
		<table name="tag" prior="tags" >
			<column name="id" type="INT" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="name" type="VARCHAR" length="100" mandatory="y" />
			<index name="pk_tags" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="unq_tag" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
			<options><![CDATA[engine=InnoDB]]></options>
		</table>
	</schema>
	<layout name="mssclient" id="3ffb53d2-b523-405c-b56e-4864481bd7c9" joined_routing="y" show_relation="cascade" >
		<entity schema="dss_client" name="document" color="C1D8EE" x="228" y="266" />
		<entity schema="dss_client" name="directory_info" color="C1D8EE" x="418" y="76" />
		<entity schema="dss_client" name="directory" color="C1D8EE" x="228" y="57" />
		<entity schema="dss_client" name="module" color="C1D8EE" x="114" y="57" />
		<entity schema="dss_client" name="doc_info" color="C1D8EE" x="57" y="266" />
		<entity schema="dss_client" name="extension" color="C1D8EE" x="76" y="152" />
		<entity schema="dss_client" name="doc_version" color="C1D8EE" x="418" y="266" />
		<script name="SQL_Editor" id="f44a5401-dafa-4db1-8900-c55a7e22ddcf" language="SQL" >
			<string><![CDATA[DROP TABLE dss_client.file_name;

DROP TABLE dss_client.file_path;

DROP INDEX idx_file_version ON dss_client.file_version;

DROP INDEX idx_file_version_0 ON dss_client.file_version;

ALTER TABLE dss_client.file_version DROP COLUMN uploaded_time;

ALTER TABLE dss_core.client ALTER COLUMN modified SET DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE dss_client.document MODIFY guid VARCHAR(48)  NOT NULL DEFAULT 'uuid()'  COMMENT 'Its unique GUID, not generated from the hash';

ALTER TABLE dss_core.client MODIFY hash_guid VARCHAR(48)  NOT NULL DEFAULT uuid()  COMMENT 'Guid should be based on the hash of the name because it should be recreatable at the application level.

The hash should be recreatable from the application also. So, take the client name and then do sha256 to generate the hash. Idea is when the DB is down, still the folder should be reachable.

Each client should be aware that if their base name is managed or not. So, that one client A might say that its'' base directory is not managed, and client B might say that its base directory is managed.';

ALTER TABLE dss_core.module MODIFY hash_guid VARCHAR(48)  NOT NULL   COMMENT 'same like the client. Guid is created based on the hash of the entered name';

ALTER TABLE dss_core.module MODIFY path VARCHAR(200)     COMMENT 'Path is not mandatory. Sometimes if it is not present, we just assume that the data is present in the base directory level. As file ids are created at client level (and not at directory level), not having a path will not create any conflicts. Only file ids will not create issues. However, storing the file itself might create conflicts. So need to be careful with that approach.';]]></string>
		</script>
		<script name="SQL_Editor_001" id="e63c2285-e928-4550-bcbf-3014cbb871c6" language="SQL" >
			<string><![CDATA[ALTER TABLE dss_core.client ALTER COLUMN modified SET DEFAULT CURRENT_TIMESTAMP;
]]></string>
		</script>
		<script name="SQL_Editor_002" id="a898431d-5c20-41c2-b8e3-7df07855365f" language="SQL" >
			<string><![CDATA[ALTER TABLE dss_core.client ALTER COLUMN modified SET DEFAULT CURRENT_TIMESTAMP;
]]></string>
		</script>
	</layout>
	<layout name="msscore" id="24f2626d-ccb2-494d-bd2e-79024c8a6535" joined_routing="y" show_relation="columns" >
		<entity schema="dss_core" name="tag" color="C1D8EE" x="247" y="494" />
		<entity schema="dss_core" name="client" color="3986C1" x="228" y="285" />
		<entity schema="dss_core" name="module" color="C1D8EE" x="437" y="285" />
		<entity schema="dss_core" name="client_keys" color="C1D8EE" x="57" y="285" />
		<shape x="57" y="57" style="Rectangle" color="FF0000" >
			<comment><![CDATA[The concept of 'MANAGED' is that it expects all the names to be in either
GUID or number format such that the application expects that the name related
information is maintained outside of the application. Application or the file system
itself will have no knowledge about the original name. It knows only the guid or 
the number.
If any name is provided in a format other than the guid or number, the application
will try to generate a sha-256 hash based GUID and consider it as the name.
Taking this name, the application will then try to split and create a hierarchy]]></comment>
		</shape>
		<script name="SQL_Editor" id="f80e7f7d-fc4b-4812-a3fe-2074b7ae5f8a" language="SQL" >
			<string><![CDATA[DROP TABLE dss_client.file_extension;

DROP INDEX idx_file_name_0 ON dss_client.file_name;

DROP INDEX idx_file_name ON dss_client.file_name;

ALTER TABLE dss_client.file_info MODIFY name VARCHAR(60)  NOT NULL   COMMENT 'we should not allow the saving any file with actual name. If the file name is in number, save it as number based structure. If not then create a hash based guid and save it .';

ALTER TABLE dss_client.file_info MODIFY original_name VARCHAR(300)  NOT NULL   COMMENT 'Example : "hello text company 12.pdf". However, ths file upon being saved should be managed';

ALTER TABLE dss_client.file_path MODIFY path TEXT  NOT NULL   COMMENT 'this path is the full absolute path inside this directory.. not just the path of the file alone. which means, if it is inside any sub directory even that path has to be included.';]]></string>
		</script>
		<script name="SQL_Editor_001" id="5be1cf4a-ef97-416b-96c4-f19e4f124e35" language="SQL" >
			<string><![CDATA[ALTER TABLE dss_client.file_info MODIFY name VARCHAR(60)  NOT NULL   COMMENT 'we should not allow the saving any file with actual name. If the file name is in number, save it as number based structure. If not then create a hash based guid and save it .';

ALTER TABLE dss_client.file_info MODIFY original_name VARCHAR(300)  NOT NULL   COMMENT 'Example : "hello text company 12.pdf". However, ths file upon being saved should be managed';]]></string>
		</script>
		<script name="directory" id="7fc0b169-ec56-418c-9cdc-0d7e32d8d37a" language="SQL" >
			<string><![CDATA[CREATE  TABLE dss_core.directory ( 
	id                   BIGINT    NOT NULL AUTO_INCREMENT  PRIMARY KEY,
	parent_id            INT    NOT NULL   ,
	name                 VARCHAR(120)    NOT NULL   ,
	managedname          VARCHAR(140)    NOT NULL   ,
	path                 VARCHAR(140)    NOT NULL   ,
	created_on           DATETIME  DEFAULT current_timestamp()  NOT NULL   ,
	notes                VARCHAR(600)       
 ) engine=InnoDB;

CREATE INDEX fk_direcory_client ON dss_core.directory ( parent_id );

ALTER TABLE dss_core.directory ADD CONSTRAINT fk_direcory_client FOREIGN KEY ( parent_id ) REFERENCES dss_core.client( id ) ON DELETE NO ACTION ON UPDATE NO ACTION;]]></string>
		</script>
	</layout>
</project>